# Generated by Django 5.0 on 2025-07-26 21:02

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('processing_result', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'entries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('body', models.TextField(default='Add a description')),
                ('intent', models.CharField(choices=[('romantic', 'Romantic'), ('core', 'Core'), ('archive', 'Archive'), ('new', 'New'), ('invest', 'Invest'), ('associate', 'Associate')], default='new', max_length=20)),
                ('birthday', models.CharField(blank=True, max_length=255, null=True)),
                ('mnemonic', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_pic_index', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'people',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('firebase_uid', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('email_verified', models.DateTimeField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='GroupAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('group', models.ForeignKey(db_column='groupId', on_delete=django.db.models.deletion.CASCADE, to='people.group')),
                ('person', models.ForeignKey(db_column='personId', on_delete=django.db.models.deletion.CASCADE, to='people.person')),
                ('user', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to='people.user')),
            ],
            options={
                'db_table': 'groupAssociations',
                'unique_together': {('person', 'group')},
            },
        ),
        migrations.AddField(
            model_name='group',
            name='people',
            field=models.ManyToManyField(related_name='groups', through='people.GroupAssociation', to='people.person'),
        ),
        migrations.CreateModel(
            name='EntryPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('entry', models.ForeignKey(db_column='entryId', on_delete=django.db.models.deletion.CASCADE, to='people.entry')),
                ('person', models.ForeignKey(db_column='personId', on_delete=django.db.models.deletion.CASCADE, to='people.person')),
            ],
            options={
                'db_table': 'entryPeople',
                'unique_together': {('entry', 'person')},
            },
        ),
        migrations.AddField(
            model_name='entry',
            name='people',
            field=models.ManyToManyField(related_name='entries', through='people.EntryPerson', to='people.person'),
        ),
        migrations.AddField(
            model_name='person',
            name='user',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='people', to='people.user'),
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('change_type', models.CharField(choices=[('prompt', 'Prompt'), ('manual', 'Manual')], db_column='changeType', max_length=20)),
                ('field', models.CharField(max_length=255)),
                ('detail', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('person', models.ForeignKey(db_column='personId', on_delete=django.db.models.deletion.CASCADE, related_name='history_entries', to='people.person')),
                ('user', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='history_entries', to='people.user')),
            ],
            options={
                'db_table': 'history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='user',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='people.user'),
        ),
        migrations.AddField(
            model_name='entry',
            name='user',
            field=models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='people.user'),
        ),
        migrations.CreateModel(
            name='PersonAssociation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('associate', models.ForeignKey(db_column='associateId', on_delete=django.db.models.deletion.CASCADE, related_name='associate_associations', to='people.person')),
                ('person', models.ForeignKey(db_column='personId', on_delete=django.db.models.deletion.CASCADE, related_name='person_associations', to='people.person')),
            ],
            options={
                'db_table': 'personAssociations',
                'unique_together': {('person', 'associate')},
            },
        ),
    ]
